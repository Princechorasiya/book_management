const { userModel, bookModel } = require("../models/index");

const issuedBook = require("../dtos/books-dtos");
const { all } = require("../routes/books");

const getAllBooks = async (req, res) => {
    const books = await bookModel.find();
    if (books.length === 0) {
        return res.status(404).json({
            success: false,
            message:"No book found"
        })
    }

    return res.status(200).json({
        success: true,
        data:books,
    })
};

const getSingleBookById = async (req, res) => {
    const { id } = req.params;
    const book = await bookModel.findById(id);


    if (!book) {
        return res.status(404).json({
            success: false,
            message: "book does not exist",
            
        });
    };

    return res.status(200).json({
        success: true,
        message: "book details are here",
        data: book
    });
};

const getAllIssuedBooks = async (req, res) => {
    const userWithIssuedBook = await userModel.find({
        issuedBook: { $exists: true },
    }).populate("issuedBook");

    // dto data tranfer object

    
    const issuedBooks = users.map((each) => new issuedBook(each));
    if (issuedBooks.length === 0) {
        return res.status(404).json({
            success: false,
            message: "no issued book",
            
        });
    }

    return res.status(200).json({
        success: true,
        message: "issued book here",
        data: issuedBooks
    });
};


const addNewBook = async (req, res) => {
    const { data } = req.body;
    if (!data) {
        return res.status(404).json({
            success: false,
            message: 'no data added'
        });

    };
    // const allBooks = { ...books, data };
    await bookModel.create(data);

    const allBooks = await bookModel.find();

    return res.status(201).json({
        success: true,
        message: "Book added successfully",
        data: allBooks,
        
    });



}


const updateBookById = async (req, res) => {
    
    const { id } = req.params;
    const { data } = req.body;

    const updatedBook = await bookModel.findOneAndUpdate({
        _id: id,
        
        // _id autogenerated id _for auto 
    }, data, {
        new: true,
    })
    
    
    return res.status(202).json({
        success: true,
        message: 'book updated',
        data: updatedBook
    });




}

module.exports = { getAllBooks, getSingleBookById,getAllIssuedBooks ,addNewBook,updateBookById};